{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"India_vs_World_COVID-19","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNbyJX2QiZtI6kRpfN1Cg6Y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"TPU"},"cells":[{"cell_type":"code","metadata":{"id":"wiYtzc20sXU3","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975288341,"user_tz":-330,"elapsed":1521,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","import plotly.express as px\n","import plotly.graph_objects as go\n","import folium\n","from folium import plugins\n","plt.rcParams['figure.figsize']=10,12  #manupulating default plot size\n","import warnings # desable warnings\n","warnings.filterwarnings('ignore')\n","import pandas.util.testing as tm"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"J9YL-VWOrMQA","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975292038,"user_tz":-330,"elapsed":731,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["# Scrapping the data set from the official website\n","from datetime import datetime\n","import os\n","import re\n","import glob\n","import requests\n","from bs4 import BeautifulSoup"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"_wFxscG2tjPq","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975296492,"user_tz":-330,"elapsed":1473,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["link='https://www.mohfw.gov.in/'\n","req=requests.get(link)\n","soup=BeautifulSoup(req.content,\"html.parser\")\n","thead=soup.find_all('thead')[-1]\n","# print(thead)\n","head=thead.find_all('tr')\n","# print(head)"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"vBCo88OOuVjs","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975305346,"user_tz":-330,"elapsed":1120,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["# our target table is the last table in this page\n","# get the table head and table head may contains column name,title,subtitles\n","thead=soup.find_all('thead')[-1]\n","# print(thead)\n","head=thead.find_all('tr')\n","# print(head)\n","# get the table tbody it contains the contents\n","tbody=soup.find_all('tbody')[-1]\n","# print(tbody)\n","# get all the rows in the table body each row is each row's entry\n","body=tbody.find_all('tr')\n","# print(body)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"2QXIreBgx4-Y","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975309028,"user_tz":-330,"elapsed":1150,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["# get the table contents\n","# container for header rows/column titles\n","head_rows=[]\n","# container for table body/contents\n","body_rows=[]\n","# loop through the head and append each row to head\n","for tr in head:\n","  td=tr.find_all(['th','td'])\n","  row=[i.text for i in td]\n","  head_rows.append(row)\n","# print(head_rows)\n","# loop through the body and append each row to the body\n","for tr in body:\n","  td=tr.find_all(['th','td'])\n","  row=[i.text for i in td]\n","  body_rows.append(row)\n","# print(body_rows)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"Nhw86MoL37UV","colab_type":"code","colab":{}},"source":["# save contents in a data frame\n","# skip last three rows as it contains unwanted information \n","# head_rows contains column titles\n","import pandas as pd\n","df_bs=pd.DataFrame(body_rows[:len(body_rows)-6],columns=head_rows[0])\n","# drop 'S.No.' column \n","df_bs.drop('S. No.',axis=1,inplace=True)\n","# There are 36 states and UT in India\n","df_bs.head(36)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7JwODd4s8nTL","colab_type":"code","colab":{}},"source":["# ************************ Data Cleaning *********************************************\n","# Date-time information\n","# saving a copy of data frame\n","df_India=df_bs.copy()\n","# today's date\n","now=datetime.now()\n","# format date to month-day-year\n","df_India['Date']=now.strftime(\"%m%d%Y\")\n","# add 'Date' column to data frame\n","df_India['Date']=pd.to_datetime(df_India['Date'],format='%m%d%Y')\n","df_India.head(36)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GF3fbtVJkvEv","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975335853,"user_tz":-330,"elapsed":1482,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["# remove extra charaters from 'Name of State/UT' columns\n","df_India['Name of State / UT']=df_India['Name of State / UT'].str.replace('#',' ')\n","df_India['Deaths**']=df_India['Deaths**'].str.replace('#',' ')"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"eWyRp8xhwIEc","colab_type":"code","colab":{}},"source":["# latitude and longitude information\n","# latitute of the states\n","lat={'Delhi':28.7041,'Haryana':29.0588,'Kerala':10.8505,'Rajasthan':27.0238,'Telengana':18.1124,'Uttar Pradesh':26.8467,'Ladakh':34.2996,'Tamil Nadu':11.1271,'Jammu and Kashmir':33.7782,'Panjab':31.1471,'Karnatka':15.3173,'Maharashtra':19.7515,'Andhra Pradesh':15.9129,'Orisha':20.9517,'Uttarakhand':30.0688,'West Bengal':22.9868,'Puducherry':11.9416,'Chandigarh':30.7333,'Chhattisgarh':21.2787,'Gujrat':22.2587,'Himanchal Pradesh':31.1084,'Madhya Pradesh':22.9734,'Bihar':25.0961,'Manipur':24.6637,'Mizoram':23.1645,'Goa':15.2993,'Andaman and Nicobar Islands':11.7401,'Assam':26.2006,'Jharkhand':23.6102,'Arunanchal Pradesh':28.2180,'Tripura':23.9408,'Nagaland':26.1584,'Meghalaya':25.4670,'Dadar Nagar Haweli':20.1809,'Sikkim':27.5330}\n","# longitude of states\n","long={'Delhi':77.1025,'Haryana':76.0856,'Kerala':76.2711,'Rajasthan':74.2179,'Telengana':79.0193,'Uttar Pradesh':80.9462,'Ladakh':78.2932,'Tamil Nadu':78.6569,'Jammu and Kashmir':76.5762,'Panjab':75.3412,'Karnatka':75.7139,'Maharashtra':75.7139,'Andhra Pradesh':79.7400,'Orisha':85.0985,'Uttarakhand':79.0193,'West Bengal':87.8550,'Puducherry':79.8083,'Chandigarh':76.7794,'Chhattisgarh':81.8661,'Gujrat':71.1924,'Himanchal Pradesh':77.1784,'Madhya Pradesh':78.6569,'Bihar':85.3131,'Manipur':93.9063,'Mizoram':92.9376,'Goa':74.1240,'Andaman and Nicobar Islands':92.6586,'Assam':92.9376,'Jharkhand':85.2799,'Arunanchal Pradesh':94.7278,'Tripura':91.9882,'Nagaland':94.5624,'Meghalaya':91.3662,'Dadar Nagar Haweli':73.0169,'Sikkim':83.3122}\n","# add latitude column based on 'Name of State / UT' column\n","df_India['Latitude']=df_India['Name of State / UT'].map(lat)\n","# add longitude column based on 'Name of State / UT' column\n","df_India['Longitude']=df_India['Name of State / UT'].map(long)\n","df_India.head(36)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZYESVkM6Qd20","colab_type":"code","colab":{}},"source":["# Rename Columns \n","df_India=df_India.rename(columns={'Cured/Discharged/Migrated':'Cured','Total Confirmed cases *':'Confirmed','Total Confirmed cases ':'Confirmed','Total Confirmed cases *':'Confirmed'})\n","# print(df_India)\n","df_India=df_India.rename(columns={'Cured/Dischared':'Cured'})\n","df_India=df_India.rename(columns={'Name of State / UT':'State/UnionTerritory'})\n","df_India=df_India.rename(columns=lambda x :re.sub('Total Confirmed cases \\(Including .* foreign Nationals\\)','Total Confirmed cases',x))\n","df_India=df_India.rename(columns={'Deaths ( more than 70% cases due to comorbidities )':'Deaths','Deaths**':'Deaths'})\n","print(df_India)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rUpX9sXmcD_f","colab_type":"code","colab":{}},"source":["# unique statename\n","df_India['State/UnionTerritory'].unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BTHH8eTYewHa","colab_type":"code","colab":{}},"source":["# No of missing values\n","df_India.isna().sum()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JXWT-nqYfAZ2","colab_type":"code","colab":{}},"source":["# No of unique values\n","df_India.nunique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0wJEgbELflPF","colab_type":"code","colab":{}},"source":["# Saving data\n","# file names as year-month-day.csv format\n","file_name=now.strftime(\"%Y_%m_%d\")+' - COVID-19_India.csv'\n","# location for saving the file\n","file_loc='/content/'\n","# save file as csv file\n","df_India.to_csv(file_loc + file_name, index=False)\n","df_India.head(36)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iUa9Uwtwh1vh","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975393092,"user_tz":-330,"elapsed":1262,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["# fix data type\n","import pandas as pd\n","df_India['Date']=pd.to_datetime(df_India['Date'])"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"FaQjQnDAzZ65","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592975397298,"user_tz":-330,"elapsed":1311,"user":{"displayName":"Surendra Yadav","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gg2EQz3uLMB4aTXdg1HUr4ooEAvkzml_W7wT9tN3w=s64","userId":"14512164815440786772"}}},"source":["# rename State/UT names \n","df_India['State/UnionTerritory'].replace('Chattisgarh','Chhattisgarh',inplace=True)\n","df_India['State/UnionTerritory'].replace('Pondicherry','Puducherry',inplace=True)"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"jFs7ooy85ZoE","colab_type":"code","colab":{}},"source":["# Final data frame\n","df_India.head(36)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"D-hr6y_I9THK","colab_type":"code","colab":{}},"source":["# Complete data info\n","df_India.info()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jwqu1Q4k-ZeN","colab_type":"code","colab":{}},"source":["# Saving data\n","# file names as year-month-day.csv format\n","file_name=now.strftime('%Y_%m_%d')+' - COVID-19_India_Preprocessed.csv'\n","# location for saving the file\n","file_loc='/content/'\n","# save file as csv file\n","df_India.to_csv(file_loc+file_name,index=False)\n","# print(file_name)\n","df_India.head(36)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"36gh1Elg-9lQ","colab_type":"code","colab":{}},"source":["# How to read csv file by creating a data frame using pandas\n","import pandas as pd\n","df=pd.read_csv('/content/2020_06_24 - COVID-19_India_Preprocessed.csv')\n","# df=pd.read_csv('/content/+ today + - COVID-19_India_Preprocessed.csv')\n","df_India=df.copy()\n","df_India"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y2VD_v0E3yUr","colab_type":"code","colab":{}},"source":["df=df_India.rename(columns={\"Cured/Discharged/Migrated*\":\"Cured\",\"Total Confirmed cases*\":\"Confirmed\"})\n","df['Active Cases*'].sum()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9yjruA1sJdoK","colab_type":"code","colab":{}},"source":["# Analysing COVID 19 cases in India\n","total_cases=df[\"Confirmed\"].sum()\n","print('Total number of Confirmed COVID 2019 cases across India till date(24nd June 2020:',total_cases)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xPO-qwKGMYv4","colab_type":"code","colab":{}},"source":["# How to highlight data frame\n","df_temp=df.drop(['Latitude','Longitude','Date'],axis=1)  # Removing Longitude,Latitude and other extra columns\n","df_temp= df_temp[['State/UnionTerritory','Confirmed', 'Cured', 'Deaths']]\n","df_temp.style.background_gradient(cmap='Reds')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PZuKq-WCtKnZ","colab_type":"code","colab":{}},"source":["today=now.strftime('%Y_%m_%d')\n","total_cured=df['Cured'].sum()\n","print('Total People who are cured as of '+ today+' ' +'are:',total_cured)\n","total_cases=df['Confirmed'].sum()\n","print('Total people who are detected COVID+ve as of '+ today +' '+'are:',total_cases)\n","total_death=df['Deaths'].sum()\n","print('Total people who died due to COVID-19 as of' + today +' '+'are:',total_death)\n","total_active=total_cases-total_cured-total_death\n","print('Total active COVID-19 cases as of'+today+' '+'are:',total_active)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rPjEDdB-Mk1i","colab_type":"code","colab":{}},"source":["# Total Active is the Total cases - (Number of deaths + cured )\n","#df['Total_Active']=df['Confirmed'] - ( df['Deaths'] + df['Cured'])\n","#total_active=df['total_active']+sum()\n","# print('Total number of Active COVID 2019 cases across India:',total_active)\n","Tot_cases=df.groupby('State/UnionTerritory')['Active Cases*'].sum().sort_values(ascending=False).to_frame()\n","Tot_cases.style.background_gradient(cmap='Reds')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fhgciDAEoYT2","colab_type":"code","colab":{}},"source":["import numpy as np\n","state_cases=df.groupby('State/UnionTerritory')['Confirmed','Deaths','Cured'].max().reset_index()\n","# state_cases=state_cases.astype({'Deaths':'int'})\n","state_cases['Active']=state_cases['Confirmed']-(state_cases['Deaths']+state_cases['Cured'])\n","state_cases[\"Death Rate (per 100) \"] = np.round(100*state_cases[\"Deaths\"]/state_cases[\"Confirmed\"],2)\n","state_cases[\"Cured Rate (per 100) \"]=np.round(100*state_cases[\"Cured\"]/state_cases[\"Confirmed\"],2)\n","state_cases.sort_values('Confirmed',ascending=False).fillna(0).style.background_gradient(cmap='Blues',subset=[\"Confirmed\"]).background_gradient(cmap='Blues',subset=[\"Deaths\"]).background_gradient(cmap='Blues',subset=[\"Cured\"]).background_gradient(cmap='Blues',subset=[\"Active\"]).background_gradient(cmap='Blues',subset=[\"Death Rate (per 100) \"]).background_gradient(cmap='Blues',subset=[\"Cured Rate (per 100) \"])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8qX-fmmKhLUN","colab_type":"code","colab":{}},"source":["# Finding more details COVID Insights in India \n","# df=pd.read_csv('/content/2020_06_24 - COVID-19_India_Preprocessed.csv')\n","# import pandas as pd\n","# age_details=pd.read_csv('/content/AgeGroupDetails.csv')\n","# india_covid_19=pd.read_csv('/content/covid_19_india.csv')\n","# hospital_beds=pd.read_csv('/content/HospitalBedsIndia.csv')\n","# individual_details=pd.read_csv('/content/IndividualDetails.csv')\n","# ICMR_details=pd.read_csv('/content/ICMRTestingDetails.csv')\n","# ICMR_labs=pd.read_csv('/content/ICMRTestingLabs.csv')\n","# state_details=pd.read_csv('/content/StatewiseTestingDetails.csv')\n","# population=pd.read_csv('/content/population_india_census_2011.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5C4ozefMkyS5","colab_type":"code","colab":{}},"source":["\n","#df_India['Date']=pd.to_datetime(df_India['Date'],format='%m%d%Y')\n","#state_testing['Date']=pd.to_datetime(state_testing['Date'])\n","#ICMR_details['DateTime']=pd.to_datetime(ICMR_details['DateTime'],dayfirst=True)\n","#ICMR_details=ICMR_details.dropna(subset=['TotalSamplesTested','TotalPositiveCases'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6RkdLsomnrZr","colab_type":"code","colab":{}},"source":["confirmed_df=pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_19_data/csse_19')\n","deaths_df=pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_19_data/csse_19')\n","recovered_df=pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_19_data/csse_19')\n","lattest_data=pd.read_csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_19_data/csse_19')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-id1Eobno3y2","colab_type":"code","colab":{}},"source":["labels=list(age_details['AgeGroup'])\n","sizes=list(age_details['TotalCases'])\n","explode=[]\n","for i in labels:\n","  explode.append(0.05)\n","\n"," plt.figure(figsize=(15,10))\n"," plt.pie(sizes,labels=labels,autopct='%1.1%f%%',startangle=9,explode=explode)\n"," center_circle=plt.Circle((0,0),0.70,fc='white')\n","\n"," fig=plt.gcf()\n"," fig.gca().add_artist(center_circle)\n"," plt.title('India -Age Group wise Disrtibution',fontsize=20)\n"," plt.tight_layout()\n","\n"," dates=list(confirmed_df.columns[4:])\n"," dates=list(pd.to_datetime(dates))\n"," dates_india=dates[:8]\n","\n"," tes=list(pd.to_datetime(dates))\n"," dates_india=dates[:8]\n"," df1=confirmed_df.groupby('Country/Region').sum().reset_index()\n"," df2=deaths_df.groupby('Country/Region').sum().reset_index()\n"," df3=recovered_df.groupby('Country/Region').sum().reset_index()\n","\n"," k=df1[df1['Country/Region']=='India'].loc[:,'1/30/20':]\n"," india_confirmed=k.values.tolist()[0]\n"," k=df2[df2['Country/Region']=='India'].loc[:,'1/30/20':]\n"," india_deaths=k.values.tolist()[0]\n"," \n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"89LruT8jCavx","colab_type":"code","colab":{}},"source":["# Total Sample tested \n","import matplotlib.dates as mdates\n","ICMR_details['Percent_positive']=round(ICMR_details['TotalPositiveCases']/ICMR_details['TotalSamplesTested'])*100,1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"q5DFJgIcCa2Y","colab_type":"code","colab":{}},"source":["fig,ax1=plt.subplots(figsize=(1,5))\n","ax1.xaxis.set_major_formatter(mdates.DateFormatter('%d-%b'))\n","ax1.set_ylabel('Positve cases (% of Total Samples Tested'))\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EGPXv39JFvdE","colab_type":"code","colab":{}},"source":["# Testing Live Status\n","import json\n","#  get response from the web page\n","response=request.get('https://api.covid19india.org/state_test_data.json')\n","# get content from the response\n","content=response.content\n","parsed=json.loads(content)\n","parsed.keys  #keys\n","dict_keys(['states_tested_data'])\n","# save the data in data frame\n","tested=pd.DataFrame(parsed['states_tested_data'])\n","tested.tail()  # first few rows\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BiE01iuNJMKp","colab_type":"code","colab":{}},"source":["# fix data types\n","tested['updatedon']=pd.to_datetime(tested['updatedon'])\n","# save file as on csv file\n","tested.to_csv('updated_tests_latest_state_level.csv',index=False)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Dh2J7x95J0Is","colab_type":"code","colab":{}},"source":["state_test_cases=tested.groupby(['updatedon','state'])['totaltested','populationncp2019projection','tested']\n","state_test_cases.head(36)\n"],"execution_count":null,"outputs":[]}]}